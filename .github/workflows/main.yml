# This is a basic workflow to help you get started with Actions
name: CI task for PROD branch

on:
  pull_request:
    branches: [ PROD ]

jobs:
  # build_app:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Use Node.js 12.x
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: 12.x
  #   - run: npm ci
  #   - run: npm run build --if-present
  build_container:
    needs: [build_app]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}:latest       
      - name: Snyk Container Test
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ Secrets.SNYK_TOKEN }}
        with:
          image: goof:PROD
          args: --file=Dockerfile
      - name: Upload Container Scan results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}:latest

# ---
# name: CI-Static-web
# on:
#   push:
#     branches:
#       - 'master'

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       -
#         name: Checkout 
#         uses: actions/checkout@v2
#       -
#         name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1
#       - name: Build Docker Image 
#         id: docker_build
#         uses: docker/build-push-action@2
#         with:
#           push: false
#           load: true
#           tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}:latest
#       # -
#       #   name: Build and push
#       #   uses: docker/build-push-action@v2
#       #   with:
#       #     context: .
#       #     file: ./Dockerfile
#       #     push: true
#       #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}:latest
      
#       - name: Snyk Container Test
#         continue-on-error: true
#         uses: snyk/actions/docker@master
#         env:
#           SNYK_TOKEN: ${{ Secrets.SNYK_TOKEN }}
#         with:
#           image: ${{ secrets.APP_NAME }}:latest
#           args: --file=Dockerfile
#       -
#         name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
